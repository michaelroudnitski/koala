{"ast":null,"code":"var _jsxFileName = \"/Users/mroudnitski/dev/koala/components/Blog/Posts/Posts.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport PostPreview from \"../Misc/PostPreview\";\n\nfunction Posts() {\n  const {\n    0: posts,\n    1: setPosts\n  } = useState({\n    requestComplete: false,\n    data: null\n  });\n  useEffect(() => {\n    fetch(`${process.env.WP_API}/posts?_embed`).then(res => res.json()).then(data => {\n      setPosts({\n        requestComplete: true,\n        data\n      });\n    }).catch(() => setPosts({\n      requestComplete: true\n    }));\n    document.title = \"Blog | Michael Roudnitski\";\n  }, []);\n  let content = null;\n\n  if (!posts.requestComplete) {\n    content = __jsx(Spinner, {\n      className: \"mx-auto\",\n      variant: \"primary\",\n      role: \"status\",\n      animation: \"border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    });\n  } else if (posts.data) {\n    content = posts.data.map((post, index) => __jsx(PostPreview, {\n      key: index,\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(\"h4\", {\n    className: \"mx-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"New Posts\"), __jsx(\"div\", {\n    className: \"horizontal-blog-post-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, content ? content : \"Oops... Couldn't find what you were looking for\"));\n}\n\nexport default Posts;","map":{"version":3,"sources":["/Users/mroudnitski/dev/koala/components/Blog/Posts/Posts.js"],"names":["React","useState","useEffect","Spinner","PostPreview","Posts","posts","setPosts","requestComplete","data","fetch","process","env","WP_API","then","res","json","catch","document","title","content","map","post","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC;AACjCO,IAAAA,eAAe,EAAE,KADgB;AAEjCC,IAAAA,IAAI,EAAE;AAF2B,GAAD,CAAlC;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,MAAO,eAAvB,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESL,IAAD,IAAU;AACdF,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,eAAe,EAAE,IAAnB;AAAyBC,QAAAA;AAAzB,OAAD,CAAR;AACD,KAJH,EAKGQ,KALH,CAKS,MAAMV,QAAQ,CAAC;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAAD,CALvB;AAMAU,IAAAA,QAAQ,CAACC,KAAT,GAAiB,2BAAjB;AACD,GARQ,EAQN,EARM,CAAT;AAUA,MAAIC,OAAO,GAAG,IAAd;;AACA,MAAI,CAACd,KAAK,CAACE,eAAX,EAA4B;AAC1BY,IAAAA,OAAO,GACL,MAAC,OAAD;AACE,MAAA,SAAS,EAAC,SADZ;AAEE,MAAA,OAAO,EAAC,SAFV;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,SAAS,EAAC,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,GATD,MASO,IAAId,KAAK,CAACG,IAAV,EAAgB;AACrBW,IAAAA,OAAO,GAAGd,KAAK,CAACG,IAAN,CAAWY,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KACvB,MAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,KAAlB;AAAyB,MAAA,IAAI,EAAED,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADQ,CAAV;AAGD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,GAAGA,OAAH,GAAa,iDADvB,CAFF,CADF;AAQD;;AAED,eAAef,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport PostPreview from \"../Misc/PostPreview\";\n\nfunction Posts() {\n  const [posts, setPosts] = useState({\n    requestComplete: false,\n    data: null,\n  });\n\n  useEffect(() => {\n    fetch(`${process.env.WP_API}/posts?_embed`)\n      .then((res) => res.json())\n      .then((data) => {\n        setPosts({ requestComplete: true, data });\n      })\n      .catch(() => setPosts({ requestComplete: true }));\n    document.title = \"Blog | Michael Roudnitski\";\n  }, []);\n\n  let content = null;\n  if (!posts.requestComplete) {\n    content = (\n      <Spinner\n        className=\"mx-auto\"\n        variant=\"primary\"\n        role=\"status\"\n        animation=\"border\"\n      />\n    );\n  } else if (posts.data) {\n    content = posts.data.map((post, index) => (\n      <PostPreview key={index} post={post} />\n    ));\n  }\n\n  return (\n    <div>\n      <h4 className=\"mx-3\">New Posts</h4>\n      <div className=\"horizontal-blog-post-cards\">\n        {content ? content : \"Oops... Couldn't find what you were looking for\"}\n      </div>\n    </div>\n  );\n}\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}