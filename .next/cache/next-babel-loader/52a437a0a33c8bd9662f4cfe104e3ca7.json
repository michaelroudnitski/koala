{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/mroudnitski/dev/koala/components/MyWork/WorkPreview.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useSpring, animated } from \"react-spring\";\n\nvar calc = function calc(x, y) {\n  return [(y - 300) / 40, -(x - 300) / 60, 1.1];\n};\n\nvar trans = function trans(x, y, s) {\n  return \"perspective(600px) rotateX(\".concat(x, \"deg) rotateY(\").concat(y, \"deg) scale(\").concat(s, \")\");\n};\n\nfunction WorkPreview(props) {\n  _s();\n\n  var _useSpring = useSpring(function () {\n    return {\n      xys: [0, 0, 1],\n      config: {\n        mass: 5,\n        tension: 350,\n        friction: 100\n      }\n    };\n  }),\n      _useSpring2 = _slicedToArray(_useSpring, 2),\n      anim = _useSpring2[0],\n      set = _useSpring2[1];\n\n  return __jsx(\"div\", {\n    className: \"p-4\",\n    onMouseMove: function onMouseMove(_ref) {\n      var x = _ref.clientX,\n          y = _ref.clientY;\n      return set({\n        xys: calc(x, y)\n      });\n    },\n    onMouseLeave: function onMouseLeave() {\n      return set({\n        xys: [0, 0, 1]\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    href: props.link,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(animated.img, {\n    className: \"border rounded\",\n    src: props.img,\n    style: {\n      transform: anim.xys.interpolate(trans)\n    },\n    alt: \"Project Preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(WorkPreview, \"UQBO+i3I0FhoKdTM21fy1wrfX3E=\", false, function () {\n  return [useSpring];\n});\n\n_c = WorkPreview;\nexport default WorkPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkPreview\");","map":{"version":3,"sources":["/Users/mroudnitski/dev/koala/components/MyWork/WorkPreview.js"],"names":["React","useSpring","animated","calc","x","y","trans","s","WorkPreview","props","xys","config","mass","tension","friction","anim","set","clientX","clientY","link","img","transform","interpolate"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,CAAD,EAAIC,CAAJ;AAAA,SAAU,CAAC,CAACA,CAAC,GAAG,GAAL,IAAY,EAAb,EAAiB,EAAED,CAAC,GAAG,GAAN,IAAa,EAA9B,EAAkC,GAAlC,CAAV;AAAA,CAAb;;AACA,IAAME,KAAK,GAAG,SAARA,KAAQ,CAACF,CAAD,EAAIC,CAAJ,EAAOE,CAAP;AAAA,8CACkBH,CADlB,0BACmCC,CADnC,wBACkDE,CADlD;AAAA,CAAd;;AAGA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAAA,mBACNR,SAAS,CAAC;AAAA,WAAO;AACnCS,MAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAD8B;AAEnCC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,OAAO,EAAE,GAApB;AAAyBC,QAAAA,QAAQ,EAAE;AAAnC;AAF2B,KAAP;AAAA,GAAD,CADH;AAAA;AAAA,MACnBC,IADmB;AAAA,MACbC,GADa;;AAM1B,SACE;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,WAAW,EAAE;AAAA,UAAYZ,CAAZ,QAAGa,OAAH;AAAA,UAAwBZ,CAAxB,QAAea,OAAf;AAAA,aAAgCF,GAAG,CAAC;AAAEN,QAAAA,GAAG,EAAEP,IAAI,CAACC,CAAD,EAAIC,CAAJ;AAAX,OAAD,CAAnC;AAAA,KAFf;AAGE,IAAA,YAAY,EAAE;AAAA,aAAMW,GAAG,CAAC;AAAEN,QAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAAP,OAAD,CAAT;AAAA,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAG,IAAA,IAAI,EAAED,KAAK,CAACU,IAAf;AAAqB,IAAA,MAAM,EAAC,QAA5B;AAAqC,IAAA,GAAG,EAAC,qBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD,CAAU,GAAV;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,IAAA,GAAG,EAAEV,KAAK,CAACW,GAFb;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAEN,IAAI,CAACL,GAAL,CAASY,WAAT,CAAqBhB,KAArB;AAAb,KAHT;AAIE,IAAA,GAAG,EAAC,iBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF;AAgBD;;GAtBQE,W;UACaP,S;;;KADbO,W;AAwBT,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { useSpring, animated } from \"react-spring\";\n\nconst calc = (x, y) => [(y - 300) / 40, -(x - 300) / 60, 1.1];\nconst trans = (x, y, s) =>\n  `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\n\nfunction WorkPreview(props) {\n  const [anim, set] = useSpring(() => ({\n    xys: [0, 0, 1],\n    config: { mass: 5, tension: 350, friction: 100 },\n  }));\n\n  return (\n    <div\n      className=\"p-4\"\n      onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n      onMouseLeave={() => set({ xys: [0, 0, 1] })}\n    >\n      <a href={props.link} target=\"_blank\" rel=\"noopener noreferrer\">\n        <animated.img\n          className=\"border rounded\"\n          src={props.img}\n          style={{ transform: anim.xys.interpolate(trans) }}\n          alt=\"Project Preview\"\n        />\n      </a>\n    </div>\n  );\n}\n\nexport default WorkPreview;\n"]},"metadata":{},"sourceType":"module"}