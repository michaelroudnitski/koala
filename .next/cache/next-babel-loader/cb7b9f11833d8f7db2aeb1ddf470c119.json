{"ast":null,"code":"var _jsxFileName = \"/Users/mroudnitski/dev/koala/components/Misc/GitHubStats.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nfunction GitHubStats() {\n  _s();\n\n  var _useState = useState({\n    requestComplete: false,\n    data: null\n  }),\n      repos = _useState[0],\n      setRepos = _useState[1];\n\n  useEffect(function () {\n    fetch(\"https://api.github.com/users/michaelroudnitski/repos\").then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      setRepos({\n        requestComplete: true,\n        data: data\n      });\n    })[\"catch\"](function () {\n      return setRepos({\n        requestComplete: true\n      });\n    });\n  }, []);\n\n  var content = __jsx(Spinner, {\n    role: \"status\",\n    animation: \"border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  });\n\n  if (repos.requestComplete) {\n    if (repos.data) {\n      content = __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, __jsx(\"h5\", {\n        className: \"mt-3 mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }, \"GitHub Stats\"), __jsx(\"ul\", {\n        className: \"list-unstyled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, repos.data.length + \" repositories\"), __jsx(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, repos.data.reduce(function (total, curr) {\n        return total + parseInt(curr.stargazers_count);\n      }, 0) + \" stars\")));\n    } else {\n      content = null;\n    }\n  }\n\n  return __jsx(\"div\", {\n    className: !repos.requestComplete ? \"m-auto\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, content);\n}\n\n_s(GitHubStats, \"n0TG5bl2J+s4dhA1sljGF7zL6Fc=\");\n\n_c = GitHubStats;\nexport default GitHubStats;\n\nvar _c;\n\n$RefreshReg$(_c, \"GitHubStats\");","map":{"version":3,"sources":["/Users/mroudnitski/dev/koala/components/Misc/GitHubStats.js"],"names":["React","useState","useEffect","Spinner","GitHubStats","requestComplete","data","repos","setRepos","fetch","then","res","json","content","length","reduce","total","curr","parseInt","stargazers_count"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AAAA,kBACKH,QAAQ,CAAC;AACjCI,IAAAA,eAAe,EAAE,KADgB;AAEjCC,IAAAA,IAAI,EAAE;AAF2B,GAAD,CADb;AAAA,MACdC,KADc;AAAA,MACPC,QADO;;AAMrBN,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,KAAK,CAAC,sDAAD,CAAL,CACGC,IADH,CACQ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,KADR,EAEGF,IAFH,CAEQ,UAACJ,IAAD,EAAU;AACdE,MAAAA,QAAQ,CAAC;AAAEH,QAAAA,eAAe,EAAE,IAAnB;AAAyBC,QAAAA,IAAI,EAAJA;AAAzB,OAAD,CAAR;AACD,KAJH,WAKS;AAAA,aAAME,QAAQ,CAAC;AAAEH,QAAAA,eAAe,EAAE;AAAnB,OAAD,CAAd;AAAA,KALT;AAMD,GAPQ,EAON,EAPM,CAAT;;AASA,MAAIQ,OAAO,GAAG,MAAC,OAAD;AAAS,IAAA,IAAI,EAAC,QAAd;AAAuB,IAAA,SAAS,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd;;AAEA,MAAIN,KAAK,CAACF,eAAV,EAA2B;AACzB,QAAIE,KAAK,CAACD,IAAV,EAAgB;AACdO,MAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKN,KAAK,CAACD,IAAN,CAAWQ,MAAX,GAAoB,eAAzB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGP,KAAK,CAACD,IAAN,CAAWS,MAAX,CACC,UAACC,KAAD,EAAQC,IAAR;AAAA,eAAiBD,KAAK,GAAGE,QAAQ,CAACD,IAAI,CAACE,gBAAN,CAAjC;AAAA,OADD,EAEC,CAFD,IAGG,QAJN,CAFF,CAFF,CADF;AAcD,KAfD,MAeO;AACLN,MAAAA,OAAO,GAAG,IAAV;AACD;AACF;;AAED,SACE;AAAK,IAAA,SAAS,EAAE,CAACN,KAAK,CAACF,eAAP,GAAyB,QAAzB,GAAoC,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2DQ,OAA3D,CADF;AAGD;;GAzCQT,W;;KAAAA,W;AA2CT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nfunction GitHubStats() {\n  const [repos, setRepos] = useState({\n    requestComplete: false,\n    data: null,\n  });\n\n  useEffect(() => {\n    fetch(\"https://api.github.com/users/michaelroudnitski/repos\")\n      .then((res) => res.json())\n      .then((data) => {\n        setRepos({ requestComplete: true, data });\n      })\n      .catch(() => setRepos({ requestComplete: true }));\n  }, []);\n\n  let content = <Spinner role=\"status\" animation=\"border\" />;\n\n  if (repos.requestComplete) {\n    if (repos.data) {\n      content = (\n        <div>\n          <h5 className=\"mt-3 mb-3\">GitHub Stats</h5>\n          <ul className=\"list-unstyled\">\n            <li>{repos.data.length + \" repositories\"}</li>\n            <li>\n              {repos.data.reduce(\n                (total, curr) => total + parseInt(curr.stargazers_count),\n                0\n              ) + \" stars\"}\n            </li>\n          </ul>\n        </div>\n      );\n    } else {\n      content = null;\n    }\n  }\n\n  return (\n    <div className={!repos.requestComplete ? \"m-auto\" : null}>{content}</div>\n  );\n}\n\nexport default GitHubStats;\n"]},"metadata":{},"sourceType":"module"}