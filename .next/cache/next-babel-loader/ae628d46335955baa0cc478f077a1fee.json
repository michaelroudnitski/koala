{"ast":null,"code":"var _jsxFileName = \"/Users/mroudnitski/dev/koala/components/MyWork/MyWork.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport WorkPreview from \"./WorkPreview\";\nimport styles from \"./MyWork.module.scss\";\nimport tabsImg from \"../../assets/tabs.jpeg\";\nimport junojumpImg from \"../../assets/junojump.png\";\nimport snakeImg from \"../../assets/snake.gif\";\nimport SectionHeader from \"../Misc/SectionHeader\";\nconst works = [{\n  img: tabsImg,\n  name: \"Tabs\",\n  link: \"https://tabsapp.co\"\n}, {\n  img: junojumpImg,\n  name: \"Juno Jump\",\n  link: \"https://play.google.com/store/apps/details?id=com.MichaelRoudnitski.Slider\"\n}, {\n  img: snakeImg,\n  name: \"Snake\",\n  link: \"https://github.com/michaelroudnitski/Snake-2015\"\n}];\n\nfunction MyWork() {\n  const previews = works.map((work, index) => __jsx(WorkPreview, {\n    img: work.img,\n    name: work.name,\n    link: work.link,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }));\n  return __jsx(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(SectionHeader, {\n    title: \"My Work\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: styles.horizontalscroll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, previews));\n}\n\nexport default MyWork;","map":{"version":3,"sources":["/Users/mroudnitski/dev/koala/components/MyWork/MyWork.js"],"names":["React","WorkPreview","styles","tabsImg","junojumpImg","snakeImg","SectionHeader","works","img","name","link","MyWork","previews","map","work","index","horizontalscroll"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AAEA,MAAMC,KAAK,GAAG,CACZ;AAAEC,EAAAA,GAAG,EAAEL,OAAP;AAAgBM,EAAAA,IAAI,EAAE,MAAtB;AAA8BC,EAAAA,IAAI,EAAE;AAApC,CADY,EAEZ;AACEF,EAAAA,GAAG,EAAEJ,WADP;AAEEK,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,IAAI,EACF;AAJJ,CAFY,EAQZ;AACEF,EAAAA,GAAG,EAAEH,QADP;AAEEI,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,IAAI,EAAE;AAHR,CARY,CAAd;;AAeA,SAASC,MAAT,GAAkB;AAChB,QAAMC,QAAQ,GAAGL,KAAK,CAACM,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KACzB,MAAC,WAAD;AAAa,IAAA,GAAG,EAAED,IAAI,CAACN,GAAvB;AAA4B,IAAA,IAAI,EAAEM,IAAI,CAACL,IAAvC;AAA6C,IAAA,IAAI,EAAEK,IAAI,CAACJ,IAAxD;AAA8D,IAAA,GAAG,EAAEK,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADe,CAAjB;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAEb,MAAM,CAACc,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CJ,QAA1C,CAFF,CADF;AAMD;;AAED,eAAeD,MAAf","sourcesContent":["import React from \"react\";\nimport WorkPreview from \"./WorkPreview\";\nimport styles from \"./MyWork.module.scss\";\nimport tabsImg from \"../../assets/tabs.jpeg\";\nimport junojumpImg from \"../../assets/junojump.png\";\nimport snakeImg from \"../../assets/snake.gif\";\nimport SectionHeader from \"../Misc/SectionHeader\";\n\nconst works = [\n  { img: tabsImg, name: \"Tabs\", link: \"https://tabsapp.co\" },\n  {\n    img: junojumpImg,\n    name: \"Juno Jump\",\n    link:\n      \"https://play.google.com/store/apps/details?id=com.MichaelRoudnitski.Slider\",\n  },\n  {\n    img: snakeImg,\n    name: \"Snake\",\n    link: \"https://github.com/michaelroudnitski/Snake-2015\",\n  },\n];\n\nfunction MyWork() {\n  const previews = works.map((work, index) => (\n    <WorkPreview img={work.img} name={work.name} link={work.link} key={index} />\n  ));\n\n  return (\n    <div className=\"col\">\n      <SectionHeader title=\"My Work\" />\n      <div className={styles.horizontalscroll}>{previews}</div>\n    </div>\n  );\n}\n\nexport default MyWork;\n"]},"metadata":{},"sourceType":"module"}